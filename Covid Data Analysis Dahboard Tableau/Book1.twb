<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0na8eou0xl6wd519awov80qjqise'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0na8eou0xl6wd519awov80qjqise' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='string' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='string' name='female_smokers' ordinal='56' />
            <column datatype='string' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='real' name='population' ordinal='62' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='string' name='excess_mortality' ordinal='65' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0na8eou0xl6wd519awov80qjqise' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='string' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='string' name='female_smokers' ordinal='56' />
            <column datatype='string' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='real' name='population' ordinal='62' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='string' name='excess_mortality' ordinal='65' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='real' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tmn:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>#2022-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2022</bucket>
            </map>
            <map to='#edc948'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2021</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>#2022-01-01 00:00:00#</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Sweden&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_E34AB6C2827E44A1995E0E8E9687313C'>
            <properties context=''>
              <relation connection='textscan.0na8eou0xl6wd519awov80qjqise' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='total_tests' ordinal='25' />
                  <column datatype='string' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='string' name='total_boosters' ordinal='37' />
                  <column datatype='real' name='new_vaccinations' ordinal='38' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='real' name='population_density' ordinal='48' />
                  <column datatype='real' name='median_age' ordinal='49' />
                  <column datatype='real' name='aged_65_older' ordinal='50' />
                  <column datatype='real' name='aged_70_older' ordinal='51' />
                  <column datatype='real' name='gdp_per_capita' ordinal='52' />
                  <column datatype='string' name='extreme_poverty' ordinal='53' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='55' />
                  <column datatype='string' name='female_smokers' ordinal='56' />
                  <column datatype='string' name='male_smokers' ordinal='57' />
                  <column datatype='real' name='handwashing_facilities' ordinal='58' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
                  <column datatype='real' name='life_expectancy' ordinal='60' />
                  <column datatype='real' name='human_development_index' ordinal='61' />
                  <column datatype='real' name='population' ordinal='62' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='string' name='excess_mortality' ordinal='65' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name=' New Cases Per Month In North America '>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]</rows>
        <cols>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk] / ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[mn:date:ok] / [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]))</cols>
      </table>
      <simple-id uuid='{D8B16F95-8C4F-40AB-A0E4-64AFBEA24DF0}' />
    </worksheet>
    <worksheet name='Deaths Rate and New Deaths Comparsion'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column-instance column='[new_deaths]' derivation='Avg' name='[avg:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>4411.9677419354839</max>
          </filter>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>1544646.142857143</max>
          </filter>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk] + [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk])</rows>
        <cols>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{1F0AEE20-6E18-45F1-86C9-9D07F6DB7369}' />
    </worksheet>
    <worksheet name='Deaths Vs Vaccinated People Comparsion '>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column-instance column='[new_deaths]' derivation='Avg' name='[avg:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>4411.9677419354839</max>
          </filter>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>1544646.142857143</max>
          </filter>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_deaths:qk] + ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk] + [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]))</rows>
        <cols>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{5D0B97A5-D787-4FC7-ABF3-372155911796}' />
    </worksheet>
    <worksheet name='New Cases Per Quater In North America Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' value='53' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]</rows>
        <cols>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk] / ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok] / [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]))</cols>
      </table>
      <simple-id uuid='{8AFAB923-85E7-4FE7-BFC3-7227BABABEEE}' />
    </worksheet>
    <worksheet name='New Cases and Death Decreases when people get Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column-instance column='[new_deaths]' derivation='Avg' name='[avg:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Avg' name='[avg:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>4411.9677419354839</max>
          </filter>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>1544646.142857143</max>
          </filter>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:total_deaths:qk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[avg:new_deaths:qk]</column>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_vaccinations:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_deaths:qk] + ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk] + ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:people_fully_vaccinated:qk] + [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_vaccinations:qk])))</rows>
        <cols>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{55CFCE2D-9EE7-444A-BF57-B1D41FFAA206}' />
    </worksheet>
    <worksheet name='Total Cases Per Month In North America'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]</rows>
        <cols>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk] / ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[mn:date:ok] / [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]))</cols>
      </table>
      <simple-id uuid='{FA646F40-B145-4D02-88B4-554032A9F629}' />
    </worksheet>
    <worksheet name='Total Cases Per Quater In North America Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' value='53' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]</rows>
        <cols>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk] / ([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok] / [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]))</cols>
      </table>
      <simple-id uuid='{FD238E27-F823-488B-B703-91EB9984B7F9}' />
    </worksheet>
    <worksheet name='Total and New Cases Per Year In North America'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.1qruaqd0969h7a17w7y0i1ilwsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.1qruaqd0969h7a17w7y0i1ilwsgm'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' value='203' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' />
              <text column='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:total_cases:qk] + [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[sum:new_cases:qk])</rows>
        <cols>([federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk] / [federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok])</cols>
      </table>
      <simple-id uuid='{AE516E4A-468C-442D-867D-7EDF924C1678}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Total Cases Per Month In North America'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83CE0521-99A1-45D8-AAFF-1AC271D7127C}' />
    </window>
    <window class='worksheet' name='Total Cases Per Quater In North America Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5A1338D-5022-4935-AF49-8476795E2214}' />
    </window>
    <window class='worksheet' name=' New Cases Per Month In North America '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{052F5F4F-0F48-47FD-98CF-BBD593B208AD}' />
    </window>
    <window class='worksheet' name='New Cases Per Quater In North America Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[qr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEEA33EC-68E6-4B43-BC7E-2B95157F6F74}' />
    </window>
    <window class='worksheet' name='Total and New Cases Per Year In North America'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[tyr:date:ok]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C2373F5-9B64-4B8D-A529-F33A481A5AE9}' />
    </window>
    <window class='worksheet' name='Deaths Rate and New Deaths Comparsion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC0A6F76-5AFE-4FFD-9B8C-DD4843A75265}' />
    </window>
    <window class='worksheet' name='Deaths Vs Vaccinated People Comparsion '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCABA003-16A8-4AA0-B121-36D47429CACB}' />
    </window>
    <window class='worksheet' maximized='true' name='New Cases and Death Decreases when people get Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[none:location:nk]</field>
            <field>[federated.1qruaqd0969h7a17w7y0i1ilwsgm].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9C8F58C-CD63-48B0-BBFC-278F003FC873}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' New Cases Per Month In North America ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths Rate and New Deaths Comparsion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths Vs Vaccinated People Comparsion ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases Per Quater In North America Region' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='New Cases and Death Decreases when people get Vaccinated' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Cases Per Month In North America' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases Per Quater In North America Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total and New Cases Per Year In North America' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
